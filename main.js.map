{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-word/add-word.component.css","webpack:///./src/app/add-word/add-word.component.html","webpack:///./src/app/add-word/add-word.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/directives/search.directive.ts","webpack:///./src/app/fetch-vowels.pipe.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/sidebar/sidebar.component.css","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/app/synonym/synonym.component.css","webpack:///./src/app/synonym/synonym.component.html","webpack:///./src/app/synonym/synonym.component.ts","webpack:///./src/app/word-detail/word-detail.component.css","webpack:///./src/app/word-detail/word-detail.component.html","webpack:///./src/app/word-detail/word-detail.component.ts","webpack:///./src/app/word.service.ts","webpack:///./src/app/word.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <h1>Add New Word</h1>\\n    <form (ngSubmit)=\\\"userSubmit()\\\" #addform=\\\"ngForm\\\">\\n    <div class=\\\"form-group col-md-6\\\">\\n    <label for=\\\"name\\\">Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\" required #name=\\\"ngModel\\\">\\n    </div>\\n    <div [hidden]=\\\"name.valid || name.pristine\\\" class=\\\"alert alert-danger\\\">\\n    Name is required\\n    </div>\\n    <div class=\\\"form-group  col-md-6\\\">\\n    <label for=\\\"meaning\\\">Meaning</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"model.meaning\\\" name=\\\"meaning\\\" class=\\\"form-control\\\" id=\\\"meaning\\\" required #meaning=\\\"ngModel\\\">\\n    </div>\\n    <div [hidden]=\\\"meaning.valid || meaning.pristine\\\" class=\\\"alert alert-danger\\\">\\n        Meaning is required\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default form-control  col-md-6\\\" [disabled]=\\\"!addform.form.valid\\\">Add Word</button>\\n    </form>\\n\\n    <p>\\n      Note: Please add the words and meaning wisely as currently, this will get permanently stored in firebase database. \\n    </p>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { WordService } from '../word.service';\n\n@Component({\n  selector: 'app-add-word',\n  templateUrl: './add-word.component.html',\n  styleUrls: ['./add-word.component.css']\n})\nexport class AddWordComponent implements OnInit {\n  model = { name: '', meaning: '' };\n\n  constructor(private wordService: WordService) { }\n\n  ngOnInit() {\n  }\n\n  userSubmit() {\n    \n    this.wordService.addWord(this.model);\n    //this.model.firstname = ‘’;\n    //this.model.lastname = ‘’;\n    //this.model.mobile_no = ‘’;\n    }\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {HomeComponent} from './home/home.component';\nimport {WordDetailComponent} from './word-detail/word-detail.component';\nimport {AddWordComponent} from './add-word/add-word.component';\nconst routes: Routes = [\n  {path:'', redirectTo: '/home',pathMatch:'full'},\n  {path:'home', component:HomeComponent },\n  { path: 'word-detail/:name', component: WordDetailComponent },\n  {path:'add', component:AddWordComponent}\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"h1 {\\r\\n  color: #369;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-size: 250%;\\r\\n}\"","module.exports = \"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\\\">\\n<script src=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\\\" ></script>\\n\\n<app-header></app-header>\\n<app-sidebar></app-sidebar>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'World of words';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AngularFireModule } from 'angularfire2'; \nimport { AngularFireAuthModule } from 'angularfire2/auth'; \nimport { AngularFirestoreModule } from 'angularfire2/firestore';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { WordDetailComponent } from './word-detail/word-detail.component';\nimport { SearchComponent } from './search/search.component';\nimport { SynonymComponent } from './synonym/synonym.component';\nimport { FetchVowelsPipe } from './fetch-vowels.pipe';\nimport { HttpClientModule } from '@angular/common/http'; \n\nimport { environment } from '../environments/environment';\nimport { SearchDirective } from './directives/search.directive';\nimport { AddWordComponent } from './add-word/add-word.component'; \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    SidebarComponent,\n    FooterComponent,\n    HomeComponent,\n    WordDetailComponent,\n    SearchComponent,\n    SynonymComponent,\n    FetchVowelsPipe,\n    SearchDirective,\n    AddWordComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebase),   \n     AngularFireAuthModule,    \n     AngularFirestoreModule, \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Directive, ElementRef, OnChanges,Input, TemplateRef, ViewContainerRef,Renderer  } from '@angular/core';\nimport { WordService } from '../word.service';\n\n@Directive({\n  selector: '[appSearch]'\n})\nexport class SearchDirective implements OnChanges {\n\n  private element: HTMLInputElement;\n\n  private e1: any;\n\n  @Input(\"appSearch\") searchName : string;\n\n  constructor(private elRef: ElementRef,private templateRef: TemplateRef<any>, private viewContainer: ViewContainerRef, private wordService: WordService,private renderer: Renderer) {\n    //console.log(viewContainer);\n    this.element = elRef.nativeElement;\n  }\n\n  ngOnChanges() {\n    \n    if(this.searchName !='' && typeof this.searchName != 'undefined'){\n     \n      // Make first character upper case in order to search in the database. \n      let searchName = this.searchName;\n      searchName = searchName.charAt(0).toUpperCase() + searchName.slice(1);\n      \n      // Word service to query it to the database. \n       this.wordService.getSearchWord(searchName).subscribe(data=>{\n        \n        this.viewContainer.clear();\n        for(var i=0; i < data.length; i++) {\n\n          var e1 = this.viewContainer.createEmbeddedView(this.templateRef,{\n            $implicit: data[i].name\n          });\n          this.e1 = e1;\n          this.renderer.listen(e1.rootNodes[0], 'click', this.clearSearch.bind(this));\n        }\n\n        \n        \n\n      });\n    } else {\n      this.viewContainer.clear();\n    }\n\n  }\n\n    \n  clearSearch(event: any):void{\n      \n    this.viewContainer.clear();\n    this.e1._view.component.searchkey = '';\n\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fetchVowels'\n})\nexport class FetchVowelsPipe implements PipeTransform {\n\n  transform(value: string): string {\n    let newStrArr: string[] = [];\n    let vowels: string[] = ['a', 'e', 'i','o','u'];\n\n    if(typeof value !=\"undefined\"){\n    for (var i = 0; i <value.length; i++) {\n      var char = value.charAt(i).toLowerCase();\n      if(vowels.some(x=>x==char)){\n        newStrArr.push(char);\n      }\n    }\n    newStrArr = Array.from(new Set(newStrArr ));\n\n    return newStrArr.join(', ');\n  } else \n    return '';\n  }\n\n}\n","module.exports = \".footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    background-color: #b0c4de;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<div class=\\\"footer\\\">\\n  <p>Copyright © 2018 Net Solutions. All Rights Reserved.</p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/* Style the header with a grey background and some padding */\\r\\n.header {\\r\\n    overflow: hidden;\\r\\n    background-color: #b0c4de;\\r\\n    padding: 20px 10px;\\r\\n  }\\r\\n/* Style the header links */\\r\\n.header a {\\r\\n    float: left;\\r\\n    color: black;\\r\\n    text-align: center;\\r\\n    padding: 12px;\\r\\n    text-decoration: none;\\r\\n    font-size: 18px; \\r\\n    line-height: 25px;\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n/* Style the logo link (notice that we set the same value of line-height and font-size to prevent the header to increase when the font gets bigger */\\r\\n.header a.logo {\\r\\n    font-size: 25px;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n/* Change the background color on mouse-over */\\r\\n.header a:hover {\\r\\n    background-color: #ddd;\\r\\n    color: black;\\r\\n  }\\r\\n/* Style the active/current link*/\\r\\n.header a.active {\\r\\n    background-color: dodgerblue;\\r\\n    color: white;\\r\\n  }\\r\\n/* Float the link section to the right */\\r\\n.header-right {\\r\\n    float: right;\\r\\n  }\\r\\n/* Add media queries for responsiveness - when the screen is 500px wide or less, stack the links on top of each other */\\r\\n@media screen and (max-width: 500px) {\\r\\n    .header a {\\r\\n      float: none;\\r\\n      display: block;\\r\\n      text-align: left;\\r\\n    }\\r\\n    .header-right {\\r\\n      float: none;\\r\\n    }\\r\\n  }\"","module.exports = \"<div class=\\\"header\\\">\\n  <a routerLink=\\\"/home\\\" class=\\\"logo\\\">Net Solutions</a>\\n  <div class=\\\"header-right\\\">\\n    \\n    \\n    <div>\\n      <input  [ngStyle]=\\\"{'height':'30px'}\\\" (keyup)=\\\"searchFunction($event)\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchkey\\\" placeholder=\\\"Search\\\"/>\\n      <ul class=\\\"word-search-list\\\">\\n        <li *appSearch=\\\"searchkey; let searchResult;\\\" >\\n            <a routerLink=\\\"/word-detail/{{searchResult}}\\\" >{{searchResult}}</a>\\n        </li> \\n       </ul> \\n    </div>\\n    \\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  searchkey: any;\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  searchFunction(event: any){\n    // redirect to the word-detail\n    if(event.keyCode == '13'){\n      this.searchkey = this.searchkey.charAt(0).toUpperCase() + this.searchkey.slice(1);\n      this.router.navigate(['/word-detail/'+this.searchkey]);\n    }\n  }\n}\n","module.exports = \".home-word-grids{list-style-type: none;display:table;}\\r\\n.home-word-grids li{    border: 1px solid #ccc;\\r\\n    margin: 10px;\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n    float: left;background: #DCDCDC}\\r\\n.home-word-grids li a {    height: 100px;\\r\\n    width: 100px;display: table-cell;\\r\\n    vertical-align: middle;}\\r\\n.centered{margin-left:21%;}\"","module.exports = \"<div class=\\\"centered\\\">\\n    <h1>Welcome to the World of Words!</h1>\\n<div *ngIf=\\\"words\\\" >\\n    \\n            <ul class=\\\"home-word-grids\\\">\\n          <li *ngFor=\\\"let word of words\\\">\\n              \\n              <a routerLink=\\\"/word-detail/{{ word.name}}\\\">{{ word.name |titlecase }}</a>\\n          </li>\\n        </ul>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport {Word} from '../word';\n\nimport { WordService } from '../word.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  words : Word[]; \n\n  constructor(private wordService: WordService) { }\n\n  ngOnInit() {\n    this.getWords();\n  }\n\n  getWords():void{\n\n    this.wordService.getWords().subscribe(data=>{\n      \n      //showing the data randomly on the home screen. \n      this.words = data.sort(function() {\n        return .5 - Math.random();\n      }).slice(0,20);\n\n    });\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  search works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".sidenav {\\r\\n     float:left;\\r\\n\\twidth:20%;\\r\\n    background-color: #b0c4de;\\r\\n    margin:10px 10px 10px 0;            \\r\\n    display: table-cell;\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n.sidenav a {\\r\\n    padding: 6px 8px 6px 16px;\\r\\n    text-decoration: none;\\r\\n    font-size: 25px;\\r\\n    color: #2196F3;\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n\\r\\n.sidenav a:hover {\\r\\n    color: #064579;\\r\\n}\\r\\n\\r\\n\\r\\n.main {\\r\\n    margin-left: 140px; /* Same width as the sidebar + left position in px */\\r\\n    font-size: 28px; /* Increased text to enable scrolling */\\r\\n    padding: 0px 10px;\\r\\n}\\r\\n\\r\\n\\r\\n.sidebar-words{\\r\\n    height: 685px;\\r\\n    overflow-y: scroll;\\r\\n}\\r\\n\\r\\n\\r\\n@media screen and (max-height: 450px) {\\r\\n    .sidenav {padding-top: 15px;}\\r\\n    .sidenav a {font-size: 18px;}\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"sidenav\\\" [ngStyle]=\\\" { color: '#b0c4de'  } \\\">\\n    <a routerLink=\\\"/home\\\" >Home</a>\\n    <a routerLink=\\\"/add\\\" >Add new word</a>\\n    \\n  <div class=\\\"sidebar-words\\\" *ngIf=\\\"words\\\" >\\n    <ul>\\n      <li *ngFor=\\\"let word of words| async\\\">\\n          <a routerLink=\\\"/word-detail/{{ word.name}}\\\">{{ k }}{{ word.name |titlecase }}</a>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\"","import { Component, OnInit  } from '@angular/core';\n\nimport {Word} from '../word';\nimport { Observable } from 'rxjs';\nimport { WordService } from '../word.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n  words : Observable<Word[]>; \n\n  constructor(private wordService: WordService) { }\n\n  ngOnInit() {\n    this.getWords();\n  }\n\n  getWords():void{\n\n    this.words = this.wordService.getWords();\n\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  synonym works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-synonym',\n  templateUrl: './synonym.component.html',\n  styleUrls: ['./synonym.component.css']\n})\nexport class SynonymComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".centered{margin-left:21%;}\\r\\nword-detail{padding: 10px;}\"","module.exports = \"<!--<div *ngIf=\\\"word\\\">\\n<h2>{{word.name | uppercase}} Details</h2>\\n<div \\n  \\n  ><span [ngStyle]=\\\" { 'font-size': '24px',\\n  'font-weight': 'bold'  } \\\">name: </span>{{word.name}}</div>\\n<div><span [ngStyle]=\\\" { 'font-size': '24px',\\n  'font-weight': 'bold'  } \\\">vowels (from name): </span>{{word.name | fetchVowels}}</div>\\n<div><span [ngStyle]=\\\" { 'font-size': '24px',\\n  'font-weight': 'bold'  } \\\">meaning: </span>{{word.meaning}}</div>\\n</div>-->\\n\\n<div *ngIf=\\\"word;then content else not_found\\\">here is ignored</div>    \\n\\n<ng-template #content>\\n    <div class=\\\"centered word-detail\\\">\\n      <h2>{{word.name | uppercase}} Details</h2>\\n      <div><span [ngStyle]=\\\" { 'font-size': '24px',\\n        'font-weight': 'bold'  } \\\">name: </span>{{word.name}}</div>\\n      <div><span [ngStyle]=\\\" { 'font-size': '24px',\\n        'font-weight': 'bold'  } \\\">vowels (from name): </span>{{word.name | fetchVowels}}</div>\\n      <div><span [ngStyle]=\\\" { 'font-size': '24px',\\n        'font-weight': 'bold'  } \\\">meaning: </span>{{word.meaning}}</div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #not_found>\\n    <div class=\\\"centered\\\">\\n        <h1> 404 </h1>\\n        <hr> \\n        <img src=\\\"assets/images/404.png\\\"/>\\n        <hr> \\n        <h1> You Seems Lost </h1>\\n        <hr> \\n        <h2> Return to <a routerLink=\\\"/home\\\"> Home Page </a> </h2>\\n  </div>\\n</ng-template>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport {Word} from '../word';\n\nimport { WordService } from '../word.service';\n\n\n\n@Component({\n  selector: 'app-word-detail',\n  templateUrl: './word-detail.component.html',\n  styleUrls: ['./word-detail.component.css']\n})\nexport class WordDetailComponent implements OnInit {\n  \n  @Input() word : Word; \n\n  constructor(private route: ActivatedRoute,\n    private wordService: WordService) { }\n\n  ngOnInit(): void {\n\n    \n   this.route\n    .params\n    .subscribe(params => {\n      this.getWord();\n    }); \n\n    this.getWord();\n    \n  }\n\n  getWord():void{\n\n    // get the name from the route snapshot. \n    const name = this.route.snapshot.paramMap.get('name');\n    this.wordService.getWord(name)\n          .subscribe((word) => {\n            this.word = word[0];\n          });\n          \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from 'angularfire2/firestore'; \nimport { AngularFireAuth } from 'angularfire2/auth'; \nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Word } from './word';\n\n\n/* const WORDS: Word[] =  [\n    { name: 'abase', meaning: 'Cause to feel shame; hurt the pride of' },\n    { name: 'acme', meaning: 'The highest level or degree attainable; the highest stage of development' },\n    { name: 'anonymous', meaning: 'Having no known name, identity or known source' },\n    { name: 'abate', meaning: 'Make less active or intense' },\n    { name: 'adamant', meaning: 'Impervious to pleas, persuasion, requests, reason' },\n    { name: 'antipathy', meaning: 'A feeling of intense dislike' },\n    { name: 'adorable', meaning: 'Lovable especially in a childlike or naive way' },\n    { name: 'asinine', meaning: 'Showing a lack of intelligence or thought; stupid and silly' },\n    { name: 'aberrant', meaning: 'Markedly different from an accepted norm' },\n    { name: 'aegis', meaning: 'Kindly endorsement and guidance' },\n    { name: 'assuage', meaning: 'Cause to be more favorably inclined; gain the good will of' },\n    { name: 'agape', meaning: 'With the mouth wide open as in wonder or awe' },\n    { name: 'avarice', meaning: 'Reprehensible acquisitiveness; insatiable desire for wealth (personified as one of the deadly sins)' },\n    { name: 'agnostic', meaning: 'Someone who is doubtful or noncommittal about something' },\n    { name: 'abscission', meaning: 'Shedding of flowers and leaves and fruit following formation of scar tissue in a plant' }\n  ]; */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WordService {\n\n  constructor( private http: HttpClient,\n               private afauth: AngularFireAuth, \n               private db: AngularFirestore) { }\n\n   /** GET heroes from the server */\n    getWords (): Observable<Word[]> {\n    \n    return this.db.collection<Word>('words').valueChanges();\n\n  }\n\n  getWord(name: string) : Observable<Word[]>  {\n    \n   return this.db.collection<Word>('words', ref => ref.where('name', '==', name)).valueChanges();\n\n  }\n\n  getSearchWord(name: string) : Observable<Word[]>  {\n    \n    //return this.db.collection<Word>('words', ref => ref.where('name', '==', 'A')).valueChanges();\n    return this.db.collection<Word>('words', ref =>ref.orderBy('name').startAt(name).endAt(name+'\\uf8ff')).valueChanges();\n   // return this.db.collection<Word>('words', ref => ref.orderBy('name').limit(5).startAt(start).endAt(end));\n   // return this.db.collection<Word>('words').valueChanges();\n \n   }\n\n   addWord(word)  {\n    word.name = word.name.charAt(0).toUpperCase() + word.name.slice(1);\n    return this.db.collection<Word>('words').add(word);\n\n    //console.log(word);\n    //return this.db.collection<Word>('words', ref => ref.where('name', '==', name)).valueChanges();\n \n   }\n\n\n}\n","export class Word {\r\n    name : string;\r\n    meaning: string;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyApG8w7MhSoESutAKNfvepWLFxPlOVyRyo\",\n    authDomain: \"worldofwords-e5932.firebaseapp.com\",\n    databaseURL: \"https://worldofwords-e5932.firebaseio.com\",\n    projectId: \"worldofwords-e5932\",\n    storageBucket: \"worldofwords-e5932.appspot.com\",\n    messagingSenderId: \"914580400704\"\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}